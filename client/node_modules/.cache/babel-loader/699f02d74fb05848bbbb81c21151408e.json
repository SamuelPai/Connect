{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MaxReinmueller\\\\Desktop\\\\repo\\\\connect\\\\client\\\\src\\\\components\\\\ExampleForm\\\\ExampleForm.component.js\";\nimport React from 'react';\nimport { ExampleFormProps } from './ExampleForm.propTypes';\nimport { Button, Form, FormGroup, Label, Input } from 'reactstrap';\n\nfunction ExampleForm(props) {\n  class AddEditForm extends React.Component {\n    constructor(...args) {\n      super(...args);\n      this.state = {\n        id: '',\n        key: '',\n        title: '',\n        image: '',\n        Description: '',\n        location: ''\n      };\n\n      this.onChange = e => {\n        this.setState({\n          [e.target.name]: e.target.value\n        });\n      };\n\n      this.submitFormAdd = e => {\n        e.preventDefault();\n        fetch('http://localhost:3000/crud', {\n          method: 'post',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            first: this.state.first,\n            last: this.state.last,\n            email: this.state.email,\n            phone: this.state.phone,\n            location: this.state.location,\n            hobby: this.state.hobby\n          })\n        }).then(response => response.json()).then(item => {\n          if (Array.isArray(item)) {\n            this.props.addItemToState(item[0]);\n            this.props.toggle();\n          } else {\n            console.log('failure');\n          }\n        }).catch(err => console.log(err));\n      };\n\n      this.submitFormEdit = e => {\n        e.preventDefault();\n        fetch('http://localhost:3000/crud', {\n          method: 'put',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            id: this.state.id,\n            first: this.state.first,\n            last: this.state.last,\n            email: this.state.email,\n            phone: this.state.phone,\n            location: this.state.location,\n            hobby: this.state.hobby\n          })\n        }).then(response => response.json()).then(item => {\n          if (Array.isArray(item)) {\n            // console.log(item[0])\n            this.props.updateState(item[0]);\n            this.props.toggle();\n          } else {\n            console.log('failure');\n          }\n        }).catch(err => console.log(err));\n      };\n    }\n\n    componentDidMount() {\n      // if item exists, populate the state with proper data\n      if (this.props.item) {\n        const _this$props$item = this.props.item,\n              id = _this$props$item.id,\n              first = _this$props$item.first,\n              last = _this$props$item.last,\n              email = _this$props$item.email,\n              phone = _this$props$item.phone,\n              location = _this$props$item.location,\n              hobby = _this$props$item.hobby;\n        this.setState({\n          id,\n          first,\n          last,\n          email,\n          phone,\n          location,\n          hobby\n        });\n      }\n    }\n\n    render() {\n      return React.createElement(Form, {\n        onSubmit: this.props.item ? this.submitFormEdit : this.submitFormAdd,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"first\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, \"First Name\"), React.createElement(Input, {\n        type: \"text\",\n        name: \"first\",\n        id: \"first\",\n        onChange: this.onChange,\n        value: this.state.first === null ? '' : this.state.first,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"last\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, \"Last Name\"), React.createElement(Input, {\n        type: \"text\",\n        name: \"last\",\n        id: \"last\",\n        onChange: this.onChange,\n        value: this.state.last === null ? '' : this.state.last,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"email\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, \"Email\"), React.createElement(Input, {\n        type: \"email\",\n        name: \"email\",\n        id: \"email\",\n        onChange: this.onChange,\n        value: this.state.email === null ? '' : this.state.email,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"phone\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, \"Phone\"), React.createElement(Input, {\n        type: \"text\",\n        name: \"phone\",\n        id: \"phone\",\n        onChange: this.onChange,\n        value: this.state.phone === null ? '' : this.state.phone,\n        placeholder: \"ex. 555-555-5555\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"location\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, \"Location\"), React.createElement(Input, {\n        type: \"text\",\n        name: \"location\",\n        id: \"location\",\n        onChange: this.onChange,\n        value: this.state.location === null ? '' : this.state.location,\n        placeholder: \"City, State\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"hobby\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, \"Hobby\"), React.createElement(Input, {\n        type: \"text\",\n        name: \"hobby\",\n        id: \"hobby\",\n        onChange: this.onChange,\n        value: this.state.hobby,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      })), React.createElement(Button, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, \"Submit\"));\n    }\n\n  }\n}\n\nExampleForm.propTypes = ExampleFormProps.propTypes;\nExampleForm.defaultProps = ExampleFormProps.defaultProps;\nexport default ExampleForm;","map":{"version":3,"sources":["C:/Users/MaxReinmueller/Desktop/repo/connect/client/src/components/ExampleForm/ExampleForm.component.js"],"names":["React","ExampleFormProps","Button","Form","FormGroup","Label","Input","ExampleForm","props","AddEditForm","Component","state","id","key","title","image","Description","location","onChange","e","setState","target","name","value","submitFormAdd","preventDefault","fetch","method","headers","body","JSON","stringify","first","last","email","phone","hobby","then","response","json","item","Array","isArray","addItemToState","toggle","console","log","catch","err","submitFormEdit","updateState","componentDidMount","render","propTypes","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { ExampleFormProps } from './ExampleForm.propTypes';\nimport { Button, Form, FormGroup, Label, Input } from 'reactstrap';\n\nfunction ExampleForm(props) {\n    class AddEditForm extends React.Component {\n      state = {\n        id:'',\n        key: '',\n        title: '',\n        image: '',\n        Description: '',\n        location: ''\n      }\n    \n      onChange = e => {\n        this.setState({[e.target.name]: e.target.value})\n      }\n    \n      submitFormAdd = e => {\n        e.preventDefault()\n        fetch('http://localhost:3000/crud', {\n          method: 'post',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            first: this.state.first,\n            last: this.state.last,\n            email: this.state.email,\n            phone: this.state.phone,\n            location: this.state.location,\n            hobby: this.state.hobby\n          })\n        })\n          .then(response => response.json())\n          .then(item => {\n            if(Array.isArray(item)) {\n              this.props.addItemToState(item[0])\n              this.props.toggle()\n            } else {\n              console.log('failure')\n            }\n          })\n          .catch(err => console.log(err))\n      }\n    \n      submitFormEdit = e => {\n        e.preventDefault()\n        fetch('http://localhost:3000/crud', {\n          method: 'put',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            id: this.state.id,\n            first: this.state.first,\n            last: this.state.last,\n            email: this.state.email,\n            phone: this.state.phone,\n            location: this.state.location,\n            hobby: this.state.hobby\n          })\n        })\n          .then(response => response.json())\n          .then(item => {\n            if(Array.isArray(item)) {\n              // console.log(item[0])\n              this.props.updateState(item[0])\n              this.props.toggle()\n            } else {\n              console.log('failure')\n            }\n          })\n          .catch(err => console.log(err))\n      }\n    \n      componentDidMount(){\n        // if item exists, populate the state with proper data\n        if(this.props.item){\n          const { id, first, last, email, phone, location, hobby } = this.props.item\n          this.setState({ id, first, last, email, phone, location, hobby })\n        }\n      }\n    \n      render() {\n        return (\n          <Form onSubmit={this.props.item ? this.submitFormEdit : this.submitFormAdd}>\n            <FormGroup>\n              <Label for=\"first\">First Name</Label>\n              <Input type=\"text\" name=\"first\" id=\"first\" onChange={this.onChange} value={this.state.first === null ? '' : this.state.first} />\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"last\">Last Name</Label>\n              <Input type=\"text\" name=\"last\" id=\"last\" onChange={this.onChange} value={this.state.last === null ? '' : this.state.last}  />\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"email\">Email</Label>\n              <Input type=\"email\" name=\"email\" id=\"email\" onChange={this.onChange} value={this.state.email === null ? '' : this.state.email}  />\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"phone\">Phone</Label>\n              <Input type=\"text\" name=\"phone\" id=\"phone\" onChange={this.onChange} value={this.state.phone === null ? '' : this.state.phone}  placeholder=\"ex. 555-555-5555\" />\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"location\">Location</Label>\n              <Input type=\"text\" name=\"location\" id=\"location\" onChange={this.onChange} value={this.state.location === null ? '' : this.state.location}  placeholder=\"City, State\" />\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"hobby\">Hobby</Label>\n              <Input type=\"text\" name=\"hobby\" id=\"hobby\" onChange={this.onChange} value={this.state.hobby}  />\n            </FormGroup>\n            <Button>Submit</Button>\n          </Form>\n        );\n      }\n    }\n}\nExampleForm.propTypes = ExampleFormProps.propTypes;\nExampleForm.defaultProps = ExampleFormProps.defaultProps;\n\nexport default ExampleForm;"]},"metadata":{},"sourceType":"module"}