{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MaxReinmueller\\\\Desktop\\\\repo\\\\connect\\\\client\\\\src\\\\pages\\\\TripPage\\\\TripPage.component.js\";\nimport React from 'react';\nimport { TripPageProps } from './TripPage.propTypes';\nimport { ReactRouterDetails } from '../../components/ReactRouterDetails/ReactRouterDetails.component';\nimport styles from './TripPage.styles.scss';\nimport Trip from '../../components/Trip/Trip';\nimport { Form, FormGroup, Label, Input, FormText } from 'reactstrap';\nimport { Container, Row, Col } from 'reactstrap';\nimport { Jumbotron, Button } from 'reactstrap';\nimport { Card, CardTitle, CardText, CardImg, CardImgOverlay } from 'reactstrap';\nimport { Media } from 'reactstrap';\nimport Validation from 'react-validation';\nimport \"../validation.js\";\nexport class TripPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: '',\n      location: '',\n      Description: '',\n      tripDate: '',\n      image: ''\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    console.log('componentDidMount()', this.props);\n  }\n\n  componentDidUpdate(prevProps, prevState, prevSnapshot) {\n    console.log('componentDidUpdate(prevProps, prevState, prevSnapshot)', prevProps, prevState, prevSnapshot);\n  }\n\n  handleSubmit(event) {\n    event.preventDefault(); // get the data\n\n    var data = {\n      title: this.state.name,\n      location: this.state.location,\n      Description: this.state.Description,\n      tripDate: this.state.tripDate,\n      image: this.state.image\n    };\n    console.log(data); // pass the data to the post function\n  } // post function\n  //     fetch(\"/users/new\", {\n  //         method: 'POST',\n  //         headers: {'Content-Type': 'application/json'},\n  //         body: JSON.stringify(data)\n  //     }).then(function(response) {\n  //         if (response.status >= 400) {\n  //           throw new Error(\"Bad response from server\");\n  //         }\n  //         return response.json();\n  //     }).then(function(data) {\n  //         console.log(data)    \n  //         if(data == \"success\"){\n  //            this.setState({msg: \"Thanks for registering\"});  \n  //         }\n  //     }).catch(function(err) {\n  //         console.log(err)\n  //     });\n  // }\n\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"container register-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(Validation.components.Form, {\n      onSubmit: this.handleSubmit,\n      method: \"POST\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"Name\"), React.createElement(Validation.components.Input, {\n      onChange: this.logChange,\n      className: \"form-control\",\n      value: \"\",\n      placeholder: \"John\",\n      name: \"name\",\n      validations: ['required'],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"Email\"), React.createElement(Validation.components.Input, {\n      onChange: this.logChange,\n      className: \"form-control\",\n      value: \"\",\n      placeholder: \"email@email.com\",\n      name: \"email\",\n      validations: ['required', 'email'],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"submit-section\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(Validation.components.Button, {\n      className: \"btn btn-uth-submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"Submit\"))));\n  }\n\n}\nTripPage.propTypes = TripPageProps.propTypes;\nTripPage.defaultProps = TripPageProps.defaultProps;","map":{"version":3,"sources":["C:/Users/MaxReinmueller/Desktop/repo/connect/client/src/pages/TripPage/TripPage.component.js"],"names":["React","TripPageProps","ReactRouterDetails","styles","Trip","Form","FormGroup","Label","Input","FormText","Container","Row","Col","Jumbotron","Button","Card","CardTitle","CardText","CardImg","CardImgOverlay","Media","Validation","TripPage","Component","constructor","props","state","title","location","Description","tripDate","image","handleSubmit","bind","componentDidMount","console","log","componentDidUpdate","prevProps","prevState","prevSnapshot","event","preventDefault","data","name","render","logChange","propTypes","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { TripPageProps } from './TripPage.propTypes'\nimport { ReactRouterDetails } from '../../components/ReactRouterDetails/ReactRouterDetails.component';\nimport styles from './TripPage.styles.scss';\nimport Trip from '../../components/Trip/Trip'\n\nimport { Form, FormGroup, Label, Input, FormText } from 'reactstrap';\nimport { Container, Row, Col } from 'reactstrap';\nimport { Jumbotron, Button } from 'reactstrap';\nimport { Card, CardTitle, CardText, CardImg, CardImgOverlay } from 'reactstrap';\nimport { Media } from 'reactstrap';\nimport Validation from 'react-validation';\nimport \"../validation.js\";\n\n\n\nexport class TripPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: '',\n      location: '',\n      Description: '',\n      tripDate: '',\n      image: ''\n    }\n    this.handleSubmit = this.handleSubmit.bind(this)\n  }\n\n  componentDidMount() {\n    console.log('componentDidMount()', this.props);\n\n    }\n  componentDidUpdate(prevProps, prevState, prevSnapshot) {\n    console.log('componentDidUpdate(prevProps, prevState, prevSnapshot)', prevProps, prevState, prevSnapshot);\n  }\n\n  handleSubmit(event) {\n    event.preventDefault()\n    // get the data\n    var data = {\n        title: this.state.name,\n        location: this.state.location,\n        Description: this.state.Description,\n        tripDate: this.state.tripDate,\n        image: this.state.image,\n    }\n    console.log(data)\n    // pass the data to the post function\n\n  }\n\n  // post function\n//     fetch(\"/users/new\", {\n//         method: 'POST',\n//         headers: {'Content-Type': 'application/json'},\n//         body: JSON.stringify(data)\n//     }).then(function(response) {\n//         if (response.status >= 400) {\n//           throw new Error(\"Bad response from server\");\n//         }\n//         return response.json();\n//     }).then(function(data) {\n//         console.log(data)    \n//         if(data == \"success\"){\n//            this.setState({msg: \"Thanks for registering\"});  \n//         }\n//     }).catch(function(err) {\n//         console.log(err)\n//     });\n// }\n\n  render() {\n    return (\n      <div className=\"container register-form\">\n      <Validation.components.Form onSubmit={this.handleSubmit} method=\"POST\">\n          <label>Name</label>\n          <Validation.components.Input onChange={this.logChange} className=\"form-control\" value='' placeholder='John' name='name' validations={['required']}/>\n          <label>Email</label>\n          <Validation.components.Input onChange={this.logChange} className=\"form-control\" value='' placeholder='email@email.com' name='email' validations={['required', 'email']}/>\n          <div className=\"submit-section\">\n              <Validation.components.Button className=\"btn btn-uth-submit\">Submit</Validation.components.Button>\n          </div>\n      </Validation.components.Form>\n  </div>\n    );\n  }\n}\n\nTripPage.propTypes = TripPageProps.propTypes;\nTripPage.defaultProps = TripPageProps.defaultProps;\n"]},"metadata":{},"sourceType":"module"}