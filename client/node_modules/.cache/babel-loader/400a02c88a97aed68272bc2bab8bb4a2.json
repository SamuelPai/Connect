{"ast":null,"code":"import ReactRouterPropTypes from 'react-router-prop-types';\nexport const LandingPageProps = {\n  propTypes: {\n    location: ReactRouterPropTypes.location.isRequired,\n    history: ReactRouterPropTypes.history.isRequired,\n    match: ReactRouterPropTypes.match.isRequired\n  },\n  defaultProps: {}\n};\nCarousel.propTypes = {\n  // the current active slide of the carousel\n  activeIndex: PropTypes.number,\n  // a function which should advance the carousel to the next slide (via activeIndex)\n  next: PropTypes.func.isRequired,\n  // a function which should advance the carousel to the previous slide (via activeIndex)\n  previous: PropTypes.func.isRequired,\n  // controls if the left and right arrow keys should control the carousel\n  keyboard: PropTypes.bool,\n\n  /* If set to \"hover\", pauses the cycling of the carousel on mouseenter and resumes the cycling of the carousel on\r\n   * mouseleave. If set to false, hovering over the carousel won't pause it. (default: \"hover\")\r\n   */\n  pause: PropTypes.oneOf(['hover', false]),\n  // Autoplays the carousel after the user manually cycles the first item. If \"carousel\", autoplays the carousel on load.\n  // This is how bootstrap defines it... I would prefer a bool named autoplay or something...\n  ride: PropTypes.oneOf(['carousel']),\n  // the interval at which the carousel automatically cycles (default: 5000)\n  interval: PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.bool]),\n  children: PropTypes.array,\n  // called when the mouse enters the Carousel\n  mouseEnter: PropTypes.func,\n  // called when the mouse exits the Carousel\n  mouseLeave: PropTypes.func,\n  // controls whether the slide animation on the Carousel works or not\n  slide: PropTypes.bool,\n  cssModule: PropTypes.object\n};","map":{"version":3,"sources":["C:/Users/waheguru/repos/connect/client/src/pages/LandingPage/LandingPage.propTypes.js"],"names":["ReactRouterPropTypes","LandingPageProps","propTypes","location","isRequired","history","match","defaultProps","Carousel","activeIndex","PropTypes","number","next","func","previous","keyboard","bool","pause","oneOf","ride","interval","oneOfType","string","children","array","mouseEnter","mouseLeave","slide","cssModule","object"],"mappings":"AAAA,OAAOA,oBAAP,MAAiC,yBAAjC;AAEA,OAAO,MAAMC,gBAAgB,GAAG;AAC9BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,QAAQ,EAAEH,oBAAoB,CAACG,QAArB,CAA8BC,UAD/B;AAETC,IAAAA,OAAO,EAAEL,oBAAoB,CAACK,OAArB,CAA6BD,UAF7B;AAGTE,IAAAA,KAAK,EAAEN,oBAAoB,CAACM,KAArB,CAA2BF;AAHzB,GADmB;AAM9BG,EAAAA,YAAY,EAAE;AANgB,CAAzB;AAQPC,QAAQ,CAACN,SAAT,GAAqB;AACnB;AACAO,EAAAA,WAAW,EAAEC,SAAS,CAACC,MAFJ;AAGnB;AACAC,EAAAA,IAAI,EAAEF,SAAS,CAACG,IAAV,CAAeT,UAJF;AAKnB;AACAU,EAAAA,QAAQ,EAAEJ,SAAS,CAACG,IAAV,CAAeT,UANN;AAOnB;AACAW,EAAAA,QAAQ,EAAEL,SAAS,CAACM,IARD;;AASnB;;;AAGAC,EAAAA,KAAK,EAAEP,SAAS,CAACQ,KAAV,CAAgB,CAAC,OAAD,EAAU,KAAV,CAAhB,CAZY;AAanB;AACA;AACAC,EAAAA,IAAI,EAAET,SAAS,CAACQ,KAAV,CAAgB,CAAC,UAAD,CAAhB,CAfa;AAgBnB;AACAE,EAAAA,QAAQ,EAAEV,SAAS,CAACW,SAAV,CAAoB,CAC5BX,SAAS,CAACC,MADkB,EAE5BD,SAAS,CAACY,MAFkB,EAG5BZ,SAAS,CAACM,IAHkB,CAApB,CAjBS;AAsBnBO,EAAAA,QAAQ,EAAEb,SAAS,CAACc,KAtBD;AAuBnB;AACAC,EAAAA,UAAU,EAAEf,SAAS,CAACG,IAxBH;AAyBnB;AACAa,EAAAA,UAAU,EAAEhB,SAAS,CAACG,IA1BH;AA2BnB;AACAc,EAAAA,KAAK,EAAEjB,SAAS,CAACM,IA5BE;AA6BnBY,EAAAA,SAAS,EAAElB,SAAS,CAACmB;AA7BF,CAArB","sourcesContent":["import ReactRouterPropTypes from 'react-router-prop-types';\r\n\r\nexport const LandingPageProps = {\r\n  propTypes: {\r\n    location: ReactRouterPropTypes.location.isRequired,\r\n    history: ReactRouterPropTypes.history.isRequired,\r\n    match: ReactRouterPropTypes.match.isRequired,\r\n  },\r\n  defaultProps: {}\r\n};\r\nCarousel.propTypes = {\r\n  // the current active slide of the carousel\r\n  activeIndex: PropTypes.number,\r\n  // a function which should advance the carousel to the next slide (via activeIndex)\r\n  next: PropTypes.func.isRequired,\r\n  // a function which should advance the carousel to the previous slide (via activeIndex)\r\n  previous: PropTypes.func.isRequired,\r\n  // controls if the left and right arrow keys should control the carousel\r\n  keyboard: PropTypes.bool,\r\n  /* If set to \"hover\", pauses the cycling of the carousel on mouseenter and resumes the cycling of the carousel on\r\n   * mouseleave. If set to false, hovering over the carousel won't pause it. (default: \"hover\")\r\n   */\r\n  pause: PropTypes.oneOf(['hover', false]),\r\n  // Autoplays the carousel after the user manually cycles the first item. If \"carousel\", autoplays the carousel on load.\r\n  // This is how bootstrap defines it... I would prefer a bool named autoplay or something...\r\n  ride: PropTypes.oneOf(['carousel']),\r\n  // the interval at which the carousel automatically cycles (default: 5000)\r\n  interval: PropTypes.oneOfType([\r\n    PropTypes.number,\r\n    PropTypes.string,\r\n    PropTypes.bool,\r\n  ]),\r\n  children: PropTypes.array,\r\n  // called when the mouse enters the Carousel\r\n  mouseEnter: PropTypes.func,\r\n  // called when the mouse exits the Carousel\r\n  mouseLeave: PropTypes.func,\r\n  // controls whether the slide animation on the Carousel works or not\r\n  slide: PropTypes.bool,\r\n  cssModule: PropTypes.object,\r\n};"]},"metadata":{},"sourceType":"module"}