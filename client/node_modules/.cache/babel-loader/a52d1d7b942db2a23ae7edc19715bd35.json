{"ast":null,"code":"'use strict';\n\nconst _requestFunction = require('request-function');\n\nconst _toRequestOptions = require('./to-request-options');\n\nconst _responseHandler = require('./response-handler');\n\nconst send = requestModel => {\n  return new Promise((resolve, reject) => {\n    try {\n      const options = _toRequestOptions(requestModel);\n\n      const request = _requestFunction.fromProtocol(options.protocol);\n\n      const clientRequest = request(options, resp => _responseHandler(resp, resolve, reject));\n      clientRequest.on('timeout', () => {\n        clientRequest.destroy();\n      });\n\n      if (requestModel.socketTimeout) {\n        clientRequest.on('socket', function (socket) {\n          socket.setTimeout(requestModel.socketTimeout);\n          socket.on('timeout', function () {\n            clientRequest.destroy();\n          });\n        });\n      }\n\n      clientRequest.on('error', e => {\n        reject(e);\n      });\n\n      if (requestModel.body) {\n        clientRequest.write(requestModel.body);\n      }\n\n      clientRequest.end();\n    } catch (e) {\n      reject(e);\n    }\n  });\n};\n\nmodule.exports = send;","map":null,"metadata":{},"sourceType":"script"}