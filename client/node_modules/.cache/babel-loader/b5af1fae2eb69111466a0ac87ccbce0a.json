{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MaxReinmueller\\\\Desktop\\\\repo\\\\connect\\\\client\\\\src\\\\pages\\\\TripPage\\\\TripPage.component.js\";\nimport React, { Component } from 'react';\nimport Validation from 'react-validation';\nimport \"../validation.js\";\nexport default class TripPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      email: '',\n      msg: ''\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    var data = {\n      name: this.state.name,\n      email: this.state.email\n    };\n    console.log(data);\n    fetch(\"/users/new\", {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    }).then(function (response) {\n      if (response.status >= 400) {\n        throw new Error(\"Bad response from server\");\n      }\n\n      return response.json();\n    }).then(function (data) {\n      console.log(data);\n\n      if (data == \"success\") {\n        this.setState({\n          msg: \"Thanks for registering\"\n        });\n      }\n    }).catch(function (err) {\n      console.log(err);\n    });\n  }\n\n  logChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"container register-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(Validation.components.Form, {\n      onSubmit: this.handleSubmit,\n      method: \"POST\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"Name\"), React.createElement(Validation.components.Input, {\n      onChange: this.logChange,\n      className: \"form-control\",\n      value: \"\",\n      placeholder: \"John\",\n      name: \"name\",\n      validations: ['required'],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"Email\"), React.createElement(Validation.components.Input, {\n      onChange: this.logChange,\n      className: \"form-control\",\n      value: \"\",\n      placeholder: \"email@email.com\",\n      name: \"email\",\n      validations: ['required', 'email'],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"submit-section\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(Validation.components.Button, {\n      className: \"btn btn-uth-submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"Submit\"))));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/MaxReinmueller/Desktop/repo/connect/client/src/pages/TripPage/TripPage.component.js"],"names":["React","Component","Validation","TripPage","constructor","props","state","name","email","msg","handleSubmit","bind","event","preventDefault","data","console","log","fetch","method","headers","body","JSON","stringify","then","response","status","Error","json","setState","catch","err","logChange","e","target","value","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,OAAO,kBAAP;AAEA,eAAe,MAAMC,QAAN,SAAuBF,SAAvB,CAAiC;AAC5CG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAE,EADG;AAETC,MAAAA,KAAK,EAAE,EAFE;AAGTC,MAAAA,GAAG,EAAE;AAHI,KAAb;AAKA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACH;;AAEDD,EAAAA,YAAY,CAACE,KAAD,EAAQ;AAChBA,IAAAA,KAAK,CAACC,cAAN;AACA,QAAIC,IAAI,GAAG;AACPP,MAAAA,IAAI,EAAE,KAAKD,KAAL,CAAWC,IADV;AAEPC,MAAAA,KAAK,EAAE,KAAKF,KAAL,CAAWE;AAFX,KAAX;AAIAO,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACAG,IAAAA,KAAK,CAAC,YAAD,EAAe;AAChBC,MAAAA,MAAM,EAAE,MADQ;AAEhBC,MAAAA,OAAO,EAAE;AAAC,wBAAgB;AAAjB,OAFO;AAGhBC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeR,IAAf;AAHU,KAAf,CAAL,CAIGS,IAJH,CAIQ,UAASC,QAAT,EAAmB;AACvB,UAAIA,QAAQ,CAACC,MAAT,IAAmB,GAAvB,EAA4B;AAC1B,cAAM,IAAIC,KAAJ,CAAU,0BAAV,CAAN;AACD;;AACD,aAAOF,QAAQ,CAACG,IAAT,EAAP;AACH,KATD,EASGJ,IATH,CASQ,UAAST,IAAT,EAAe;AACnBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;;AACA,UAAGA,IAAI,IAAI,SAAX,EAAqB;AAClB,aAAKc,QAAL,CAAc;AAACnB,UAAAA,GAAG,EAAE;AAAN,SAAd;AACF;AACJ,KAdD,EAcGoB,KAdH,CAcS,UAASC,GAAT,EAAc;AACnBf,MAAAA,OAAO,CAACC,GAAR,CAAYc,GAAZ;AACH,KAhBD;AAiBH;;AAEDC,EAAAA,SAAS,CAACC,CAAD,EAAI;AACT,SAAKJ,QAAL,CAAc;AAAC,OAACI,CAAC,CAACC,MAAF,CAAS1B,IAAV,GAAiByB,CAAC,CAACC,MAAF,CAASC;AAA3B,KAAd;AACH;;AAEDC,EAAAA,MAAM,GAAG;AACL,WACI;AAAK,MAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,UAAD,CAAY,UAAZ,CAAuB,IAAvB;AAA4B,MAAA,QAAQ,EAAE,KAAKzB,YAA3C;AAAyD,MAAA,MAAM,EAAC,MAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAEI,oBAAC,UAAD,CAAY,UAAZ,CAAuB,KAAvB;AAA6B,MAAA,QAAQ,EAAE,KAAKqB,SAA5C;AAAuD,MAAA,SAAS,EAAC,cAAjE;AAAgF,MAAA,KAAK,EAAC,EAAtF;AAAyF,MAAA,WAAW,EAAC,MAArG;AAA4G,MAAA,IAAI,EAAC,MAAjH;AAAwH,MAAA,WAAW,EAAE,CAAC,UAAD,CAArI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAHJ,EAII,oBAAC,UAAD,CAAY,UAAZ,CAAuB,KAAvB;AAA6B,MAAA,QAAQ,EAAE,KAAKA,SAA5C;AAAuD,MAAA,SAAS,EAAC,cAAjE;AAAgF,MAAA,KAAK,EAAC,EAAtF;AAAyF,MAAA,WAAW,EAAC,iBAArG;AAAuH,MAAA,IAAI,EAAC,OAA5H;AAAoI,MAAA,WAAW,EAAE,CAAC,UAAD,EAAa,OAAb,CAAjJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,EAKI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,UAAD,CAAY,UAAZ,CAAuB,MAAvB;AAA8B,MAAA,SAAS,EAAC,oBAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,CALJ,CADJ,CADJ;AAaH;;AAvD2C","sourcesContent":["import React, {Component} from 'react';\nimport Validation from 'react-validation';\nimport \"../validation.js\";\n\nexport default class TripPage extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            name: '',\n            email: '',\n            msg: ''\n        }\n        this.handleSubmit = this.handleSubmit.bind(this)\n    }\n\n    handleSubmit(event) {\n        event.preventDefault()\n        var data = {\n            name: this.state.name,\n            email: this.state.email\n        }\n        console.log(data)\n        fetch(\"/users/new\", {\n            method: 'POST',\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify(data)\n        }).then(function(response) {\n            if (response.status >= 400) {\n              throw new Error(\"Bad response from server\");\n            }\n            return response.json();\n        }).then(function(data) {\n            console.log(data)    \n            if(data == \"success\"){\n               this.setState({msg: \"Thanks for registering\"});  \n            }\n        }).catch(function(err) {\n            console.log(err)\n        });\n    }\n\n    logChange(e) {\n        this.setState({[e.target.name]: e.target.value});  \n    }\n\n    render() {\n        return (\n            <div className=\"container register-form\">\n                <Validation.components.Form onSubmit={this.handleSubmit} method=\"POST\">\n                    <label>Name</label>\n                    <Validation.components.Input onChange={this.logChange} className=\"form-control\" value='' placeholder='John' name='name' validations={['required']}/>\n                    <label>Email</label>\n                    <Validation.components.Input onChange={this.logChange} className=\"form-control\" value='' placeholder='email@email.com' name='email' validations={['required', 'email']}/>\n                    <div className=\"submit-section\">\n                        <Validation.components.Button className=\"btn btn-uth-submit\">Submit</Validation.components.Button>\n                    </div>\n                </Validation.components.Form>\n            </div>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}