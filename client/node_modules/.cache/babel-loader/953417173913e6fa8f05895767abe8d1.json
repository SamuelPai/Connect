{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MaxReinmueller\\\\Desktop\\\\repo\\\\connect\\\\client\\\\src\\\\pages\\\\TripPage\\\\TripPage.component.js\";\nimport React from 'react';\nimport { TripPageProps } from './TripPage.propTypes'; // import { ReactRouterDetails } from '../../components/ReactRouterDetails/ReactRouterDetails.component';\n// import styles from './TripPage.styles.scss';\n// import Trip from '../../components/Trip/Trip'\n\nimport { Form, FormGroup, Label, Input, FormText } from 'reactstrap';\nimport { Container, Row, Col } from 'reactstrap';\nimport { Jumbotron, Button } from 'reactstrap'; // import { Card, CardTitle, CardText, CardImg, CardImgOverlay } from 'reactstrap';\n// import { Media } from 'reactstrap';\n\nexport class TripPage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.postTrips = () => {\n      tripAPI.postTrips().then(res => {}).catch(err => console.log(err));\n    };\n\n    this.state = {\n      title: '',\n      location: '',\n      Description: '',\n      tripDate: '',\n      image: ''\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {// console.log('componentDidMount()', this.props);\n  }\n\n  componentDidUpdate(prevProps, prevState, prevSnapshot) {\n    console.log('componentDidUpdate(prevProps, prevState, prevSnapshot)', prevProps, prevState, prevSnapshot);\n  }\n\n  handleSubmit(event) {\n    event.preventDefault(); // get the data\n\n    var data = {\n      title: this.state.name,\n      location: this.state.location,\n      Description: this.state.Description,\n      tripDate: this.state.tripDate,\n      image: this.state.image\n    };\n    console.log(data); // pass the data to the post function\n\n    this.postTrips(data);\n  } // post function\n\n\n  //     fetch(\"/users/new\", {\n  //         method: 'POST',\n  //         headers: {'Content-Type': 'application/json'},\n  //         body: JSON.stringify(data)\n  //     }).then(function(response) {\n  //         if (response.status >= 400) {\n  //           throw new Error(\"Bad response from server\");\n  //         }\n  //         return response.json();\n  //     }).then(function(data) {\n  //         console.log(data)    \n  //         if(data == \"success\"){\n  //            this.setState({msg: \"Thanks for registering\"});  \n  //         }\n  //     }).catch(function(err) {\n  //         console.log(err)\n  //     });\n  // }\n  render() {\n    return React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"exampleEmail\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"title\"), React.createElement(Input, {\n      type: \"text\",\n      name: \"title\",\n      id: \"title\",\n      placeholder: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"examplePassword\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"location\"), React.createElement(Input, {\n      type: \"text\",\n      name: \"location\",\n      id: \"location\",\n      placeholder: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"exampleUrl\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"Description\"), React.createElement(Input, {\n      type: \"text\",\n      name: \"Description\",\n      id: \"Description\",\n      placeholder: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"exampleNumber\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, \"tripDate\"), React.createElement(Input, {\n      type: \"date\",\n      name: \"tripDate\",\n      id: \"tripDate\",\n      placeholder: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    })), React.createElement(Button, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, \"Submit\")));\n  }\n\n}\nTripPage.propTypes = TripPageProps.propTypes;\nTripPage.defaultProps = TripPageProps.defaultProps;","map":{"version":3,"sources":["C:/Users/MaxReinmueller/Desktop/repo/connect/client/src/pages/TripPage/TripPage.component.js"],"names":["React","TripPageProps","Form","FormGroup","Label","Input","FormText","Container","Row","Col","Jumbotron","Button","TripPage","Component","constructor","props","postTrips","tripAPI","then","res","catch","err","console","log","state","title","location","Description","tripDate","image","handleSubmit","bind","componentDidMount","componentDidUpdate","prevProps","prevState","prevSnapshot","event","preventDefault","data","name","render","propTypes","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { TripPageProps } from './TripPage.propTypes'\n// import { ReactRouterDetails } from '../../components/ReactRouterDetails/ReactRouterDetails.component';\n// import styles from './TripPage.styles.scss';\n// import Trip from '../../components/Trip/Trip'\n\nimport { Form, FormGroup, Label, Input, FormText } from 'reactstrap';\nimport { Container, Row, Col } from 'reactstrap';\nimport { Jumbotron, Button } from 'reactstrap';\n// import { Card, CardTitle, CardText, CardImg, CardImgOverlay } from 'reactstrap';\n// import { Media } from 'reactstrap';\n\n\n\n\nexport class TripPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: '',\n      location: '',\n      Description: '',\n      tripDate: '',\n      image: ''\n    }\n    this.handleSubmit = this.handleSubmit.bind(this)\n  }\n\n  componentDidMount() {\n    // console.log('componentDidMount()', this.props);\n\n    }\n  componentDidUpdate(prevProps, prevState, prevSnapshot) {\n    console.log('componentDidUpdate(prevProps, prevState, prevSnapshot)', prevProps, prevState, prevSnapshot);\n  }\n\n  handleSubmit(event) {\n    event.preventDefault()\n    // get the data\n    var data = {\n        title: this.state.name,\n        location: this.state.location,\n        Description: this.state.Description,\n        tripDate: this.state.tripDate,\n        image: this.state.image,\n    }\n    console.log(data)\n    // pass the data to the post function\n    this.postTrips(data);\n  }\n\n  // post function\n  postTrips = () => {\n    tripAPI.postTrips()\n      .then(res => {\n\n      })\n      .catch(err => console.log(err));\n  };\n//     fetch(\"/users/new\", {\n//         method: 'POST',\n//         headers: {'Content-Type': 'application/json'},\n//         body: JSON.stringify(data)\n//     }).then(function(response) {\n//         if (response.status >= 400) {\n//           throw new Error(\"Bad response from server\");\n//         }\n//         return response.json();\n//     }).then(function(data) {\n//         console.log(data)    \n//         if(data == \"success\"){\n//            this.setState({msg: \"Thanks for registering\"});  \n//         }\n//     }).catch(function(err) {\n//         console.log(err)\n//     });\n// }\n\n  render() {\n    return (\n      <Container>\n<Form>\n      <FormGroup>\n        <Label for=\"exampleEmail\">title</Label>\n        <Input\n          type=\"text\"\n          name=\"title\"\n          id=\"title\"\n          placeholder=\"\"\n        />\n      </FormGroup>\n      <FormGroup>\n        <Label for=\"examplePassword\">location</Label>\n        <Input\n          type=\"text\"\n          name=\"location\"\n          id=\"location\"\n          placeholder=\"\"\n        />\n      </FormGroup>\n      <FormGroup>\n        <Label for=\"exampleUrl\">Description</Label>\n        <Input\n          type=\"text\"\n          name=\"Description\"\n          id=\"Description\"\n          placeholder=\"\"\n        />\n      </FormGroup>\n      <FormGroup>\n        <Label for=\"exampleNumber\">tripDate</Label>\n        <Input\n          type=\"date\"\n          name=\"tripDate\"\n          id=\"tripDate\"\n          placeholder=\"\"\n        />\n      </FormGroup>\n      <Button>Submit</Button>\n    </Form>\n</Container>    \n\n     );\n  }\n}\n\nTripPage.propTypes = TripPageProps.propTypes;\nTripPage.defaultProps = TripPageProps.defaultProps;\n"]},"metadata":{},"sourceType":"module"}